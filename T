-- Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Camera = workspace.CurrentCamera
local UserInputService = game:GetService("UserInputService")

-- Configuration
local defaultColor = Color3.fromRGB(255, 0, 0)  -- Bright red
local highlightColor = Color3.fromRGB(0, 255, 0)  -- Bright green
local textSize = 8 * 1.4  -- Font size increased by 40%
local toggleKey = Enum.KeyCode.G  -- Key to toggle ESP
local espEnabled = true

-- Helper function to create Drawing objects
local function createDrawingObject(text)
    local drawing = Drawing.new("Text")
    drawing.Text = text
    drawing.Color = defaultColor
    drawing.Size = textSize
    drawing.Center = true
    drawing.Outline = true
    drawing.OutlineColor = Color3.fromRGB(0, 0, 0)
    drawing.Transparency = 0.5
    drawing.Visible = false
    drawing.Font = Drawing.Fonts.Plex
    return drawing
end

-- Update ESP for a single player
local function updateESP(espObjects, head, player, closestPlayer)
    local screenPos, onScreen = Camera:WorldToViewportPoint(head.Position)
    local localPlayer = Players.LocalPlayer

    if onScreen then
        espObjects.NameLabel.Position = Vector2.new(screenPos.X, screenPos.Y - 45)
        espObjects.WeaponLabel.Position = Vector2.new(screenPos.X, screenPos.Y - 30)
        espObjects.HealthLabel.Position = Vector2.new(screenPos.X, screenPos.Y - 15)
        espObjects.DistanceLabel.Position = Vector2.new(screenPos.X, screenPos.Y)

        -- Update weapon info
        local stats = player:FindFirstChild("Stats")
        local primaryWeapon = stats and stats:FindFirstChild("Primary") and stats.Primary.Value or "Unknown"
        local secondaryWeapon = stats and stats:FindFirstChild("Secondary") and stats.Secondary.Value or "Unknown"
        espObjects.WeaponLabel.Text = string.format("Primary: %s | Secondary: %s", primaryWeapon, secondaryWeapon)

        -- Update health info
        local healthStat = player:FindFirstChild("Stats") and player.Stats:FindFirstChild("Health")
        local health = healthStat and tostring(math.floor(healthStat.Value)) or "Unknown"
        espObjects.HealthLabel.Text = string.format("Health: %s", health)

        -- Update distance
        local distance = 0
        if localPlayer.Character then
            distance = (head.Position - localPlayer.Character:FindFirstChild("HumanoidRootPart").Position).Magnitude
            espObjects.DistanceLabel.Text = string.format("(%d studs)", math.floor(distance))
        end

        -- Determine transparency based on distance
        local maxDistance = 1000 -- Distance at which transparency reaches the minimum
        local transparency = math.clamp(1 - (distance / maxDistance), 0.3, 1)

        -- Override transparency for the closest player
        if player == closestPlayer then
            transparency = 1  -- Closest player is fully visible
        end

        -- Apply transparency to ESP objects
        espObjects.NameLabel.Transparency = transparency
        espObjects.WeaponLabel.Transparency = transparency
        espObjects.HealthLabel.Transparency = transparency
        espObjects.DistanceLabel.Transparency = transparency

        -- Apply color based on closest player
        local color = (player == closestPlayer) and highlightColor or defaultColor
        espObjects.NameLabel.Color = color
        espObjects.WeaponLabel.Color = color
        espObjects.HealthLabel.Color = color
        espObjects.DistanceLabel.Color = color

        espObjects.NameLabel.Visible = espEnabled
        espObjects.WeaponLabel.Visible = espEnabled
        espObjects.HealthLabel.Visible = espEnabled
        espObjects.DistanceLabel.Visible = espEnabled
    else
        for _, obj in pairs(espObjects) do
            obj.Visible = false
        end
    end
end

-- Setup ESP for a player's character
local function setupESP(character, player)
    local head = character:FindFirstChild("Head")
    if not head then
        warn("No Head found for character:", player.Name)
        return
    end

    -- Create ESP objects
    local espObjects = {
        NameLabel = createDrawingObject(player.Name),
        WeaponLabel = createDrawingObject("Primary: Unknown | Secondary: Unknown"),
        HealthLabel = createDrawingObject("Health: Unknown"),
        DistanceLabel = createDrawingObject("")
    }

    -- Update ESP at a lower frequency
    local connection
    connection = RunService.RenderStepped:Connect(function()
        local closestPlayer = nil
        local minDistance = math.huge

        -- Determine the closest player
        for _, otherPlayer in pairs(Players:GetPlayers()) do
            if otherPlayer ~= Players.LocalPlayer and otherPlayer.Character and otherPlayer.Character:FindFirstChild("Head") then
                local dist = (otherPlayer.Character.Head.Position - Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
                if dist < minDistance then
                    minDistance = dist
                    closestPlayer = otherPlayer
                end
            end
        end

        -- Update ESP for the player
        pcall(function() updateESP(espObjects, head, player, closestPlayer) end)
    end)

    -- Cleanup function
    local function cleanup()
        if connection then
            connection:Disconnect()
        end
        for _, obj in pairs(espObjects) do
            if obj then
                obj.Visible = false
            end
        end
    end

    -- Cleanup on character removal
    character.AncestryChanged:Connect(function(_, parent)
        if not parent then
            cleanup()
        end
    end)

    -- Cleanup when the player leaves
    player.CharacterRemoving:Connect(cleanup)
end

-- Initialize ESP for a player
local function initializeESP(player)
    if player == Players.LocalPlayer then return end  -- Skip local player

    player.CharacterAdded:Connect(function(character)
        setupESP(character, player)
    end)

    if player.Character then
        setupESP(player.Character, player)
    end
end

-- Toggle ESP on and off
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if not gameProcessed and input.KeyCode == toggleKey then
        espEnabled = not espEnabled
        if not espEnabled then
            for _, player in pairs(Players:GetPlayers()) do
                if player ~= Players.LocalPlayer and player.Character then
                    local espContainer = player.Character:FindFirstChild("ESPObjects")
                    if espContainer then
                        for _, obj in pairs(espContainer:GetChildren()) do
                            if obj:IsA("Drawing") then
                                obj.Visible = false
                            end
                        end
                    end
                end
            end
        end
    end
end)

-- Initialize ESP for all players
Players.PlayerAdded:Connect(initializeESP)
for _, player in pairs(Players:GetPlayers()) do
    initializeESP(player)
end
